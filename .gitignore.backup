# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Project specific
*.png
*.jpg
*.jpeg
*.gif
*.bmp
output_images/
temp_display.png

# ============================================
# BIBLE CLOCK SPECIFIC - SECURITY & PRIVACY
# ============================================

# Environment files with sensitive data
.env.local
.env.production
.env.development
*.env
!.env.template

# API Keys and secrets
config_local.py
secrets.py
api_keys.txt
openai_key.txt
chatgpt_config.py

# Personal configuration files
wifi_config.py
personal_settings.py
user_config.py

# Backup files that might contain sensitive data
*_backup.py
*_backup.*
*_old.*
config_backup.*

# Bible Clock runtime files
bible_clock_display.png
current_verse.png
mode_display.png
temp_*.png

# Audio files (might contain personal recordings)
*.wav
*.mp3
*.m4a
recordings/
audio_cache/

# Personal data and logs
personal_verses.json
user_preferences.json
usage_logs/
*.log

# Hardware-specific configurations
gpio_config.py
hardware_settings.py
device_specific.py

# Development and testing files
test_config.py
debug_output/
test_images/
simulation_data/

# OS and IDE specific
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
.vscode/
.idea/
*.swp
*.swo
*~

# Raspberry Pi specific
*.img
*.iso
boot_config.txt
